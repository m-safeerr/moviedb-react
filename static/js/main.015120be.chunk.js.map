{"version":3,"sources":["assets/tmovie.png","contexts/WishlistContext.js","api/apiConfig.js","components/wishlist-popup/WishlistPopup.jsx","components/header/Header.jsx","assets/footer-bg.jpg","components/footer/Footer.jsx","components/button/Button.jsx","components/modal/Modal.jsx","api/axiosClient.js","api/tmdbApi.js","components/hero-slide/HeroSlide.jsx","components/movie-card/MovieCard.jsx","components/movie-list/MovieList.jsx","pages/Home.jsx","components/page-header/PageHeader.jsx","components/input/Input.jsx","components/movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/detail/CastList.jsx","pages/detail/VideoList.jsx","pages/detail/Detail.jsx","config/Routes.jsx","App.js","index.js"],"names":["WishlistContext","createContext","useWishlist","context","useContext","Error","WishlistProvider","_ref","children","wishlist","setWishlist","useState","loading","setLoading","API_BASE_URL","USER_ID","fetchWishlist","async","response","fetch","data","json","success","error","console","addToWishlist","wishlistItem","userId","movieId","movie","id","title","name","poster_path","backdrop_path","release_date","first_air_date","overview","vote_average","movieType","method","headers","body","JSON","stringify","prev","message","removeFromWishlist","filter","item","isInWishlist","some","useEffect","value","toggleWishlist","_jsx","Provider","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","WishlistPopup","isOpen","onClose","className","onClick","e","target","currentTarget","_jsxs","length","width","height","viewBox","fill","stroke","strokeWidth","x1","y1","x2","y2","d","map","link","bg","Link","to","style","backgroundImage","handleRemove","preventDefault","stopPropagation","_id","headerNav","display","path","Header","pathname","useLocation","headerRef","useRef","showWishlistPopup","setShowWishlistPopup","active","findIndex","shrinkHeader","document","scrollTop","documentElement","current","classList","add","remove","window","addEventListener","removeEventListener","_Fragment","ref","src","logo","alt","i","handleFavoritesClick","handleCloseWishlist","Footer","Button","props","OutlineButton","ModalContent","contentRef","closeModal","parentNode","Modal","setActive","axiosClient","axios","create","baseURL","paramsSerializer","params","queryString","api_key","interceptors","request","use","config","category","tv","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","url","get","getTvList","getVideos","cate","search","detail","credits","similar","HeroSlideItem","hisrory","useHistory","background","push","modal","querySelector","videos","results","videSrc","key","setAttribute","innerHTML","toggle","TrailerModal","iframeRef","HeroSlide","SwiperCore","Autoplay","movieItems","setMovieItems","page","slice","log","getMovies","Swiper","modules","grabCursor","spaceBetween","slidesPerView","SwiperSlide","isActive","MovieCard","isFavorite","rating","toFixed","onFavoriteToggle","points","MovieList","items","setItems","getList","Home","PageHeader","Input","placeholder","onChange","MovieSearch","history","keyword","setKeyword","goToSearch","useCallback","trim","enterEvent","keyCode","MovieGrid","setPage","totalPage","setTotalPage","useParams","undefined","query","total_pages","Catalog","CastList","casts","setCasts","res","cast","getCredits","profile_path","Video","offsetWidth","VideoList","setVideos","Detail","setItem","scrollTo","getDetail","genres","genre","Routes","Switch","Route","exact","component","App","BrowserRouter","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.015120be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmovie.67797e94.png\";","// src/contexts/WishlistContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst WishlistContext = createContext();\r\n\r\nexport const useWishlist = () => {\r\n    const context = useContext(WishlistContext);\r\n    if (!context) {\r\n        throw new Error('useWishlist must be used within a WishlistProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const WishlistProvider = ({ children }) => {\r\n    const [wishlist, setWishlist] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // API base URL - adjust this to match your backend\r\n    const API_BASE_URL = 'http://localhost:5000/api';\r\n    const USER_ID = 'guest'; // For now using guest, replace with actual user ID when you have auth\r\n\r\n    // Fetch wishlist from backend\r\n    const fetchWishlist = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await fetch(`${API_BASE_URL}/wishlist/${USER_ID}`);\r\n            const data = await response.json();\r\n            \r\n            if (data.success) {\r\n                setWishlist(data.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching wishlist:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Add movie to wishlist\r\n    const addToWishlist = async (movie) => {\r\n        try {\r\n            const wishlistItem = {\r\n                userId: USER_ID,\r\n                movieId: movie.id,\r\n                title: movie.title,\r\n                name: movie.name,\r\n                poster_path: movie.poster_path,\r\n                backdrop_path: movie.backdrop_path,\r\n                release_date: movie.release_date,\r\n                first_air_date: movie.first_air_date,\r\n                overview: movie.overview,\r\n                vote_average: movie.vote_average,\r\n                movieType: movie.title ? 'movie' : 'tv'\r\n            };\r\n\r\n            const response = await fetch(`${API_BASE_URL}/wishlist`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(wishlistItem),\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (data.success) {\r\n                setWishlist(prev => [data.data, ...prev]);\r\n                return true;\r\n            } else {\r\n                console.error('Error adding to wishlist:', data.message);\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding to wishlist:', error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    // Remove movie from wishlist\r\n    const removeFromWishlist = async (movieId) => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/wishlist/${USER_ID}/${movieId}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (data.success) {\r\n                setWishlist(prev => prev.filter(item => item.movieId !== movieId));\r\n                return true;\r\n            } else {\r\n                console.error('Error removing from wishlist:', data.message);\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error removing from wishlist:', error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    // Check if movie is in wishlist\r\n    const isInWishlist = (movieId) => {\r\n        return wishlist.some(item => item.movieId === movieId);\r\n    };\r\n\r\n\r\n\r\n    // Toggle wishlist status\r\n    const toggleWishlist = async (movie) => {\r\n        const movieId = movie.id;\r\n        \r\n        if (isInWishlist(movieId)) {\r\n            return await removeFromWishlist(movieId);\r\n        } else {\r\n            return await addToWishlist(movie);\r\n        }\r\n    };\r\n\r\n\r\n    // Load wishlist on component mount\r\n    useEffect(() => {\r\n        fetchWishlist();\r\n    }, []);\r\n\r\n    const value = {\r\n        wishlist,\r\n        loading,\r\n        addToWishlist,\r\n        removeFromWishlist,\r\n        isInWishlist,\r\n        toggleWishlist,\r\n        fetchWishlist\r\n    };\r\n\r\n    return (\r\n        <WishlistContext.Provider value={value}>\r\n            {children}\r\n        </WishlistContext.Provider>\r\n    );\r\n};","const apiConfig = {\n    baseUrl: 'https://api.themoviedb.org/3/',\n    apiKey: '55cb2a422e0d2201ce94253c5310bc01',\n    originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\n    w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`\n}\n\nexport default apiConfig;","// src/components/wishlist-popup/WishlistPopup.jsx\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useWishlist } from '../../contexts/WishlistContext';\r\n\r\nimport apiConfig from '../../api/apiConfig';\r\nimport './wishList.css';\r\n\r\nconst WishlistPopup = ({ isOpen, onClose }) => {\r\n    const { wishlist, removeFromWishlist } = useWishlist();\r\n\r\n    if (!isOpen) return null;\r\n\r\n    const handleBackdropClick = (e) => {\r\n        if (e.target === e.currentTarget) {\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const handleRemove = (movieId, e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        removeFromWishlist(movieId);\r\n    };\r\n\r\n    return (\r\n        <div className=\"wishlist-popup-overlay\" onClick={handleBackdropClick}>\r\n            <div className=\"wishlist-popup\">\r\n                <div className=\"wishlist-popup-header\">\r\n                    <h2>My Wishlist ({wishlist.length})</h2>\r\n                    <button className=\"close-btn\" onClick={onClose}>\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                \r\n                <div className=\"wishlist-content\">\r\n                    {wishlist.length === 0 ? (\r\n                        <div className=\"empty-wishlist\">\r\n                            <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\">\r\n                                <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\r\n                            </svg>\r\n                            <p>Your wishlist is empty</p>\r\n                            <span>Start adding movies you want to watch!</span>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"wishlist-grid\">\r\n                            {wishlist.map((movie) => {\r\n                                const movieCategory = movie.movieType || (movie.title ? 'movie' : 'tv');\r\n                                const link = '/' + movieCategory + '/' + movie.movieId;\r\n                                const bg = apiConfig.w500Image(movie.poster_path || movie.backdrop_path);\r\n                                \r\n                                return (\r\n                                    <div key={movie.movieId || movie._id} className=\"wishlist-item\">\r\n                                        <Link to={link} onClick={onClose}>\r\n                                            <div className=\"wishlist-item-image\" style={{backgroundImage: `url(${bg})`}}>\r\n                                                <button \r\n                                                    className=\"remove-btn\"\r\n                                                    onClick={(e) => handleRemove(movie.movieId, e)}\r\n                                                    aria-label=\"Remove from wishlist\"\r\n                                                >\r\n                                                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                                        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                                                        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                                                    </svg>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"wishlist-item-info\">\r\n                                                <h4>{movie.title || movie.name}</h4>\r\n                                                <p>{movie.release_date || movie.first_air_date}</p>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WishlistPopup;","import React, { useRef, useEffect, useState } from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport './header.scss';\nimport logo from '../../assets/tmovie.png';\nimport { useWishlist } from '../../contexts/WishlistContext';\nimport WishlistPopup from '../wishlist-popup/WishlistPopup';\n\nconst headerNav = [\n    {\n        display: 'Home',\n        path: '/'\n    },\n    {\n        display: 'Movies',\n        path: '/movie'\n    },\n    {\n        display: 'Series',\n        path: '/tv'\n    }\n];\n\nconst Header = () => {\n    const { pathname } = useLocation();\n    const headerRef = useRef(null);\n    const { wishlist } = useWishlist();\n    const [showWishlistPopup, setShowWishlistPopup] = useState(false);\n\n    const active = headerNav.findIndex(e => e.path === pathname);\n\n    useEffect(() => {\n        const shrinkHeader = () => {\n            if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\n                headerRef.current.classList.add('shrink');\n            } else {\n                headerRef.current.classList.remove('shrink');\n            }\n        }\n        window.addEventListener('scroll', shrinkHeader);\n        return () => {\n            window.removeEventListener('scroll', shrinkHeader);\n        };\n    }, []);\n\n    const handleFavoritesClick = () => {\n        setShowWishlistPopup(true);\n    };\n\n    const handleCloseWishlist = () => {\n        setShowWishlistPopup(false);\n    };\n\n    return (\n        <>\n            <div ref={headerRef} className=\"header\">\n                <div className=\"header__wrap container\">\n                    <div className=\"logo\">\n                        <img src={logo} alt=\"\" />\n                        <Link to=\"/\"><h4>Smdb</h4></Link>\n                    </div>\n                    <ul className=\"header__nav\">\n                        {\n                            headerNav.map((e, i) => (\n                                <li key={i} className={`${i === active ? 'active' : ''}`}>\n                                    <Link to={e.path}>\n                                        {e.display}\n                                    </Link>\n                                </li>\n                            ))\n                        }\n                        <li className=\"favorites-icon\">\n                            <button \n                                className=\"heart-icon-btn\"\n                                onClick={handleFavoritesClick}\n                                aria-label=\"Favorites\"\n                            >\n                                <svg \n                                    width=\"20\" \n                                    height=\"20\" \n                                    viewBox=\"0 0 24 24\" \n                                    fill=\"#ffffff\" \n                                    stroke=\"#ffffff\" \n                                    strokeWidth=\"2\"\n                                >\n                                    <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n                                </svg>\n                                {wishlist.length > 0 && (\n                                    <span className=\"wishlist-count\">{wishlist.length}</span>\n                                )}\n                            </button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            \n            <WishlistPopup \n                isOpen={showWishlistPopup} \n                onClose={handleCloseWishlist} \n            />\n        </>\n    );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/footer-bg.67e95f05.jpg\";","import React from 'react';\n\nimport './footer.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport bg from '../../assets/footer-bg.jpg';\nimport logo from '../../assets/tmovie.png';\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\" style={{backgroundImage: `url(${bg})`}}>\n            <div className=\"footer__content container\">\n                <div className=\"footer__content__logo\">\n                    <div className=\"logo\">\n                        <img src={logo} alt=\"\" />\n                        <Link to=\"/\"><h4>Smdb</h4></Link>\n                    </div>\n                </div>\n                <div className=\"footer__content__menus\">\n                    <div className=\"footer__content__menu\">\n                        <Link to=\"/\">Home</Link>\n                        <Link to=\"/\">Contact us</Link>\n                        <Link to=\"/\">Term of services</Link>\n                        <Link to=\"/\">About us</Link>\n                    </div>\n                    <div className=\"footer__content__menu\">\n                        <Link to=\"/\">Live</Link>\n                        <Link to=\"/\">FAQ</Link>\n                        <Link to=\"/\">Premium</Link>\n                        <Link to=\"/\">Pravacy policy</Link>\n                    </div>\n                    <div className=\"footer__content__menu\">\n                        <Link to=\"/\">You must watch</Link>\n                        <Link to=\"/\">Recent release</Link>\n                        <Link to=\"/\">Top IMDB</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './button.scss';\n\nconst Button = props => {\n    return (\n        <button\n            className={`btn ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </button>\n    );\n}\n\nexport const OutlineButton = props => {\n    return (\n        <Button\n            className={`btn-outline ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </Button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func\n}\n\nexport default Button;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './modal.scss';\n\nconst Modal = props => {\n\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        setActive(props.active);\n    }, [props.active]);\n\n    return (\n        <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\n            {props.children}\n        </div>\n    );\n}\n\nModal.propTypes = {\n    active: PropTypes.bool,\n    id: PropTypes.string\n}\n\nexport const ModalContent = props => {\n\n    const contentRef = useRef(null);\n\n    const closeModal = () => {\n        contentRef.current.parentNode.classList.remove('active');\n        if (props.onClose) props.onClose();\n    }\n\n    return (\n        <div ref={contentRef} className=\"modal__content\">\n            {props.children}\n            <div className=\"modal__content__close\" onClick={closeModal}>\n                <i className=\"bx bx-x\"></i>\n            </div>\n        </div>\n    )\n}\n\nModalContent.propTypes = {\n    onClose: PropTypes.func\n}\n\nexport default Modal;\n","import axios from 'axios';\nimport queryString from 'query-string';\n\nimport apiConfig from './apiConfig';\n\nconst axiosClient = axios.create({\n    baseURL: apiConfig.baseUrl,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\n});\n\naxiosClient.interceptors.request.use(async (config) => config);\n\naxiosClient.interceptors.response.use((response) => {\n    if (response && response.data) {\n        return response.data;\n    }\n\n    return response;\n}, (error) => {\n    throw error;\n});\n\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\n\nexport const category = {\n    movie: 'movie',\n    tv: 'tv'\n}\n\nexport const movieType = {\n    upcoming: 'upcoming',\n    popular: 'popular',\n    top_rated: 'top_rated'\n}\n\nexport const tvType = {\n    popular: 'popular',\n    top_rated: 'top_rated',\n    on_the_air: 'on_the_air'\n}\n\nconst tmdbApi = {\n    getMoviesList: (type, params) => {\n        const url = 'movie/' + movieType[type];\n        return axiosClient.get(url, params);\n    },\n    getTvList: (type, params) => {\n        const url = 'tv/' + tvType[type];\n        return axiosClient.get(url, params);\n    },\n    getVideos: (cate, id) => {\n        const url = category[cate] + '/' + id + '/videos';\n        return axiosClient.get(url, {params: {}});\n    },\n    search: (cate, params) => {\n        const url = 'search/' + category[cate];\n        return axiosClient.get(url, params);\n    },\n    detail: (cate, id, params) => {\n        const url = category[cate] + '/' + id;\n        return axiosClient.get(url, params);\n    },\n    credits: (cate, id) => {\n        const url = category[cate] + '/' + id + '/credits';\n        return axiosClient.get(url, {params: {}});\n    },\n    similar: (cate, id) => {\n        const url = category[cate] + '/' + id + '/similar';\n        return axiosClient.get(url, {params: {}});\n    },\n}\n\nexport default tmdbApi;","import React, { useState, useEffect, useRef } from 'react';\n\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport Button, { OutlineButton } from '../button/Button';\nimport Modal, { ModalContent } from '../modal/Modal';\n\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './hero-slide.scss';\nimport { useHistory } from 'react-router';\n\nconst HeroSlide = () => {\n\n    SwiperCore.use([Autoplay]);\n\n    const [movieItems, setMovieItems] = useState([]);\n\n    useEffect(() => {\n        const getMovies = async () => {\n            const params = {page: 1}\n            try {\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\n                setMovieItems(response.results.slice(1, 4));\n                console.log(response);\n            } catch {\n                console.log('error');\n            }\n        }\n        getMovies();\n    }, []);\n\n    return (\n        <div className=\"hero-slide\">\n            <Swiper\n                modules={[Autoplay]}\n                grabCursor={true}\n                spaceBetween={0}\n                slidesPerView={1}\n                // autoplay={{delay: 3000}}\n            >\n                {\n                    movieItems.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            {({ isActive }) => (\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\n                            )}\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n            {\n                movieItems.map((item, i) => <TrailerModal key={i} item={item}/>)\n            }\n        </div>\n    );\n}\n\nconst HeroSlideItem = props => {\n\n    let hisrory = useHistory();\n\n    const item = props.item;\n\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n\n    const setModalActive = async () => {\n        const modal = document.querySelector(`#modal_${item.id}`);\n\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\n\n        if (videos.results.length > 0) {\n            const videSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videSrc);\n        } else {\n            modal.querySelector('.modal__content').innerHTML = 'No trailer';\n        }\n\n        modal.classList.toggle('active');\n    }\n\n    return (\n        <div\n            className={`hero-slide__item ${props.className}`}\n            style={{backgroundImage: `url(${background})`}}\n        >\n            <div className=\"hero-slide__item__content container\">\n                <div className=\"hero-slide__item__content__info\">\n                    <h2 className=\"title\">{item.title}</h2>\n                    <div className=\"overview\">{item.overview}</div>\n                    <div className=\"btns\">\n                        <Button onClick={() => hisrory.push('/movie/' + item.id)}>\n                            Watch now\n                        </Button>\n                        <OutlineButton onClick={setModalActive}>\n                            Watch trailer\n                        </OutlineButton>\n                    </div>\n                </div>\n                <div className=\"hero-slide__item__content__poster\">\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst TrailerModal = props => {\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    const onClose = () => iframeRef.current.setAttribute('src', '');\n\n    return (\n        <Modal active={false} id={`modal_${item.id}`}>\n            <ModalContent onClose={onClose}>\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\"></iframe>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport default HeroSlide;\n","import React from 'react';\nimport './movie-card.scss';\nimport { Link } from 'react-router-dom';\n\nimport { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport { useWishlist } from '../../contexts/WishlistContext';\n\nconst MovieCard = props => {\n    const item = props.item;\n    const { isInWishlist, toggleWishlist } = useWishlist();\n    \n    const link = '/' + category[props.category] + '/' + item.id;\n    const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path);\n    const isFavorite = isInWishlist(item.id);\n    \n    // Get rating from TMDB API data\n    const rating = item.vote_average ? item.vote_average.toFixed(1) : 'N/A';\n\n    const handleHeartClick = async (e) => {\n        e.preventDefault(); // Prevent navigation when clicking heart\n        e.stopPropagation();\n        \n        const success = await toggleWishlist(item);\n        \n        if (!success) {\n            // Handle error - maybe show a toast notification\n            console.error('Failed to update wishlist');\n        }\n        \n        // Optional: Call a prop function to handle additional logic\n        if (props.onFavoriteToggle) {\n            props.onFavoriteToggle(item.id, !isFavorite);\n        }\n    };\n\n    return (\n        <Link to={link}>\n            <div className=\"movie-card\" style={{backgroundImage: `url(${bg})`}}>\n                <button \n                    className={`heart-btn ${isFavorite ? 'favorite' : ''}`}\n                    onClick={handleHeartClick}\n                    aria-label={isFavorite ? 'Remove from favorites' : 'Add to favorites'}\n                >\n                    <svg \n                        width=\"24\" \n                        height=\"24\" \n                        viewBox=\"0 0 24 24\" \n                        fill={isFavorite ? '#ff0000' : 'none'} \n                        stroke={isFavorite ? '#ff0000' : '#ffffff'} \n                        strokeWidth=\"2\"\n                    >\n                        <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n                    </svg>\n                </button>\n                \n                {/* Rating badge */}\n                <div className=\"rating-badge\">\n                    <svg \n                        width=\"16\" \n                        height=\"16\" \n                        viewBox=\"0 0 24 24\" \n                        fill=\"#ffd700\" \n                        stroke=\"#ffd700\" \n                        strokeWidth=\"1\"\n                    >\n                        <polygon points=\"12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26\" />\n                    </svg>\n                    <span>{rating}</span>\n                </div>\n            </div>\n            <h3>{item.title || item.name}</h3>\n        </Link>\n    );\n}\n\nexport default MovieCard;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './movie-list.scss';\n\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../button/Button';\n\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport MovieCard from '../movie-card/MovieCard';\n\nconst MovieList = props => {\n\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = {};\n\n            if (props.type !== 'similar') {\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(props.type, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(props.type, {params});\n                }\n            } else {\n                response = await tmdbApi.similar(props.category, props.id);\n            }\n            setItems(response.results);\n        }\n        getList();\n    }, []);\n\n    return (\n        <div className=\"movie-list\">\n            <Swiper\n                grabCursor={true}\n                spaceBetween={10}\n                slidesPerView={'auto'}\n            >\n                {\n                    items.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            <MovieCard item={item} category={props.category}/>\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n        </div>\n    );\n}\n\nMovieList.propTypes = {\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default MovieList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { OutlineButton } from '../components/button/Button';\nimport HeroSlide from '../components/hero-slide/HeroSlide';\nimport MovieList from '../components/movie-list/MovieList';\n\nimport { category, movieType, tvType } from '../api/tmdbApi';\n\nconst Home = () => {\n    return (\n        <>\n            <HeroSlide/>\n            <div className=\"container\">\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Trending Movies</h2>\n                        <Link to=\"/movie\">\n                            <OutlineButton className=\"small\">View more</OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList category={category.movie} type={movieType.popular}/>\n                </div>\n\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Top Rated Movies</h2>\n                        <Link to=\"/movie\">\n                            <OutlineButton className=\"small\">View more</OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList category={category.movie} type={movieType.top_rated}/>\n                </div>\n\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Trending TV</h2>\n                        <Link to=\"/tv\">\n                            <OutlineButton className=\"small\">View more</OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList category={category.tv} type={tvType.popular}/>\n                </div>\n\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Top Rated TV</h2>\n                        <Link to=\"/tv\">\n                            <OutlineButton className=\"small\">View more</OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList category={category.tv} type={tvType.top_rated}/>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n","import React from 'react';\n\nimport './page-header.scss';\n\nimport bg from '../../assets/footer-bg.jpg';\n\nconst PageHeader = props => {\n    return (\n        <div className=\"page-header\" style={{backgroundImage: `url(${bg})`}}>\n            <h2>{props.children}</h2>\n        </div>\n    );\n}\n\n\nexport default PageHeader;\n","import React from 'react';\n\nimport './input.scss';\n\nconst Input = props => {\n    return (\n        <input\n            type={props.type}\n            placeholder={props.placeholder}\n            value={props.value}\n            onChange={props.onChange ? (e) => props.onChange(e) : null}\n        />\n    );\n}\n\nexport default Input;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router';\n\nimport './movie-grid.scss';\n\nimport MovieCard from '../movie-card/MovieCard';\nimport Button, { OutlineButton } from '../button/Button';\nimport Input from '../input/Input'\n\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi';\n\nconst MovieGrid = props => {\n\n    const [items, setItems] = useState([]);\n\n    const [page, setPage] = useState(1);\n    const [totalPage, setTotalPage] = useState(0);\n\n    const { keyword } = useParams();\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            if (keyword === undefined) {\n                const params = {};\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(tvType.popular, {params});\n                }\n            } else {\n                const params = {\n                    query: keyword\n                }\n                response = await tmdbApi.search(props.category, {params});\n            }\n            setItems(response.results);\n            setTotalPage(response.total_pages);\n        }\n        getList();\n    }, [props.category, keyword]);\n\n    const loadMore = async () => {\n        let response = null;\n        if (keyword === undefined) {\n            const params = {\n                page: page + 1\n            };\n            switch(props.category) {\n                case category.movie:\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\n                    break;\n                default:\n                    response = await tmdbApi.getTvList(tvType.popular, {params});\n            }\n        } else {\n            const params = {\n                page: page + 1,\n                query: keyword\n            }\n            response = await tmdbApi.search(props.category, {params});\n        }\n        setItems([...items, ...response.results]);\n        setPage(page + 1);\n    }\n\n    return (\n        <>\n            <div className=\"section mb-3\">\n                <MovieSearch category={props.category} keyword={keyword}/>\n            </div>\n            <div className=\"movie-grid\">\n                {\n                    items.map((item, i) => <MovieCard category={props.category} item={item} key={i}/>)\n                }\n            </div>\n            {\n                page < totalPage ? (\n                    <div className=\"movie-grid__loadmore\">\n                        <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\n                    </div>\n                ) : null\n            }\n        </>\n    );\n}\n\nconst MovieSearch = props => {\n\n    const history = useHistory();\n\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\n\n    const goToSearch = useCallback(\n        () => {\n            if (keyword.trim().length > 0) {\n                history.push(`/${category[props.category]}/search/${keyword}`);\n            }\n        },\n        [keyword, props.category, history]\n    );\n\n    useEffect(() => {\n        const enterEvent = (e) => {\n            e.preventDefault();\n            if (e.keyCode === 13) {\n                goToSearch();\n            }\n        }\n        document.addEventListener('keyup', enterEvent);\n        return () => {\n            document.removeEventListener('keyup', enterEvent);\n        };\n    }, [keyword, goToSearch]);\n\n    return (\n        <div className=\"movie-search\">\n            <Input\n                type=\"text\"\n                placeholder=\"Enter keyword\"\n                value={keyword}\n                onChange={(e) => setKeyword(e.target.value)}\n            />\n            <Button className=\"small\" onClick={goToSearch}>Search</Button>\n        </div>\n    )\n}\n\nexport default MovieGrid;\n","import React from 'react';\n\nimport { useParams } from 'react-router';\n\nimport PageHeader from '../components/page-header/PageHeader';\n\nimport { category as cate } from '../api/tmdbApi';\nimport MovieGrid from '../components/movie-grid/MovieGrid';\n\nconst Catalog = () => {\n\n    const { category } = useParams();\n\n    return (\n        <>\n            <PageHeader>\n                {category === cate.movie ? 'Movies' : 'TV Series'}\n            </PageHeader>\n            <div className=\"container\">\n                <div className=\"section mb-3\">\n                    <MovieGrid category={category}/>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Catalog;\n","import React, { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nconst CastList = props => {\n\n    const {category} = useParams();\n\n    const [casts, setCasts] = useState([]);\n\n    useEffect(() => {\n        const getCredits = async () => {\n            const res = await tmdbApi.credits(category, props.id);\n            setCasts(res.cast.slice(0, 5));\n        }\n        getCredits();\n    }, [category, props.id]);\n    return (\n        <div className=\"casts\">\n            {\n                casts.map((item, i) => (\n                    <div key={i} className=\"casts__item\">\n                        <div className=\"casts__item__img\" style={{backgroundImage: `url(${apiConfig.w500Image(item.profile_path)})`}}></div>\n                        <p className=\"casts__item__name\">{item.name}</p>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default CastList;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\n\nconst VideoList = props => {\n\n    const {category} = useParams();\n\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        const getVideos = async () => {\n            const res = await tmdbApi.getVideos(category, props.id);\n            setVideos(res.results.slice(0, 5));\n        }\n        getVideos();\n    }, [category, props.id]);\n\n    return (\n        <>\n            {\n                videos.map((item, i) => (\n                    <Video key={i} item={item}/>\n                ))\n            }\n        </>\n    );\n}\n\nconst Video = props => {\n\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    useEffect(() => {\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\n        iframeRef.current.setAttribute('height', height);\n    }, []);\n\n    return (\n        <div className=\"video\">\n            <div className=\"video__title\">\n                <h2>{item.name}</h2>\n            </div>\n            <iframe\n                src={`https://www.youtube.com/embed/${item.key}`}\n                ref={iframeRef}\n                width=\"100%\"\n                title=\"video\"\n            ></iframe>\n        </div>\n    )\n}\n\nexport default VideoList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './detail.scss';\nimport CastList from './CastList';\nimport VideoList from './VideoList';\n\nimport MovieList from '../../components/movie-list/MovieList';\n\nconst Detail = () => {\n  \n    const { category, id } = useParams();\n\n    const [item, setItem] = useState(null);\n\n\n    useEffect(() => {\n        const getDetail = async () => {\n            const response = await tmdbApi.detail(category, id, {params:{}});\n            setItem(response);\n            window.scrollTo(0,0);\n        }\n        getDetail();\n    }, [category, id]);\n\n    return (\n        <>\n            {\n                item && (\n                    <>\n                        <div className=\"banner\" style={{backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}></div>\n                        <div className=\"mb-3 movie-content container\">\n                            <div className=\"movie-content__poster\">\n                                <div className=\"movie-content__poster__img\" style={{backgroundImage: `url(${apiConfig.originalImage(item.poster_path || item.backdrop_path)})`}}></div>\n                            </div>\n                            <div className=\"movie-content__info\">\n                                <h1 className=\"title\">\n                                    {item.title || item.name}\n                                </h1>\n                                <div className=\"genres\">\n                                    {\n                                        item.genres && item.genres.slice(0, 5).map((genre, i) => (\n                                            <span key={i} className=\"genres__item\">{genre.name}</span>\n                                        ))\n                                    }\n                                </div>\n                                \n                                \n                            <p className=\"overview\">{item.overview}</p>\n                                <div className=\"cast\">\n                                    <div className=\"section__header\">\n                                        <h2>Casts</h2>\n                                    </div>\n                                    <CastList id={item.id}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div className=\"section mb-3\">\n                                <VideoList id={item.id}/>\n                            </div>\n                            <div className=\"section mb-3\">\n                                <div className=\"section__header mb-2\">\n                                    <h2>Similar</h2>\n                                </div>\n                                <MovieList category={category} type=\"similar\" id={item.id}/>\n                            </div>\n                        </div>\n                    </>\n                )\n            }\n        </>\n    );\n     \n    }\n\nexport default Detail;\n","\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport Catalog from '../pages/Catalog';\nimport Detail from '../pages/detail/Detail';\n\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route\n                path='/moviedb-react'exact\n                component={Home}\n            />\n            <Route\n                path='/'exact\n                component={Home}\n            />\n            <Route\n                path='/:category/search/:keyword'\n                component={Catalog}\n            />\n            <Route\n                path='/:category/:id'\n                component={Detail}\n            />\n            <Route\n                path='/:category'\n                component={Catalog}\n            />\n         \n        </Switch>\n    );\n}\n\nexport default Routes; \n\n\n","import 'swiper/swiper.min.css';\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\nimport './App.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport Routes from './config/Routes';\nimport { WishlistProvider } from './contexts/WishlistContext';\n\nfunction App() {\n    return (\n        <WishlistProvider>\n            <BrowserRouter>\n                <Header />\n                <Routes />\n                <Footer />\n            </BrowserRouter>\n        </WishlistProvider>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// server/index.js or server.js\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}